#							-*-shell-script-*-
# TOPDIR, ARCH and DIST should be passed in from outside
#test -z "$TOPDIR" && echo "error:  TOPDIR undefined" 1>&2 && exit 1
test -z "$ARCH" && echo "error:  ARCH undefined" 1>&2 && exit 1
test -z "$DIST" && echo "error:  DIST undefined" 1>&2 && exit 1

# For dependent pkgs
#if test -n "$INTERMEDIATE_REPO"; then
#    BINDMOUNTS="$TOPDIR/$INTERMEDIATE_REPO"
#    OTHERMIRROR="deb [arch=$ARCH] file://$TOPDIR/$INTERMEDIATE_REPO $DIST main"
#fi
if [ -d dists/ ]; then
    BINDMOUNTS=$TOPDIR/dists/
    OTHERMIRROR="deb [arch=$ARCH] file://$TOPDIR/ $DIST main"
fi

# For building modules
#if test -n "$PACKAGE_DIR"; then
#    BINDMOUNTS="$BINDMOUNTS $TOPDIR/$PACKAGE_DIR"
#fi

# Other useful opts from cmdline:
# DEBBUILDOPTS=-Tbinary-arch
# DEBEMAIL='John Doe <jdoe@example.com>'

# Debian configuration
DEBIAN_SUITES=("wheezy")
DEBIAN_MIRROR="ftp.debian.org"

# Ubuntu configuration
UBUNTU_SUITES=("precise" "lucid")
UBUNTU_MIRROR="ftp.ubuntu.com"

# Keyring file
KEYRING=${TOPDIR}/pbuilder/keyring.gpg
#APTKEYRINGS=("${APTKEYRINGS[@]}" "$TOPDIR/admin/$KEYRING")
APTKEYRINGS=("${APTKEYRINGS[@]}" "$KEYRING")

# Distribution
DISTRIBUTION=${DIST}

# Base tarball
BASETGZ="${TOPDIR}/pbuilder/${DIST}/${ARCH}/base.tgz"
#BASETGZ="pbuilder/${DIST}/${ARCH}/base.tgz"

# Where to build
BUILDPLACE="${TOPDIR}/tmp"

# Where to place finished pkgs
BUILDRESULT="pbuilder/${DIST}/${ARCH}/pkgs"

# cache for packages
APTCACHE="${TOPDIR}/aptcache/${DIST}/${ARCH}/"
#APTCACHEHARDLINK=no

# ccache
CCACHEDIR="${TOPDIR}/ccache"
test -d ${CCACHEDIR} || mkdir -p ${CCACHEDIR}

# always log builds
#PKGNAME_LOGFILE=yes

# hook directory
HOOKDIR="${TOPDIR}/pbuilder"

# set arch in debootstrap
DEBOOTSTRAPOPTS=(
    "${DEBOOTSTRAPOPTS[@]}"
    "--arch=${ARCH}"
    "--keyring=${KEYRING}"
    #"--include=gnupg"
)

# set arch for create mode
ARCHITECTURE=${ARCH}

# unexport ARCH; messes with at least kernel pkgs
export -n ARCH; unset ARCH


# compute MIRRORSITE and COMPONENTS values
if $(echo ${DEBIAN_SUITES[@]} | grep -q $DIST); then
    # Debian configuration
    MIRRORSITE="http://$DEBIAN_MIRROR/debian/"
    #COMPONENTS="main contrib non-free"
    COMPONENTS="main"

elif $(echo ${UBUNTU_SUITES[@]} | grep -q $DIST); then
    # Ubuntu configuration
    MIRRORSITE="http://$UBUNTU_MIRROR/ubuntu/"
    #COMPONENTS="main restricted universe multiverse"
    COMPONENTS="main"

else
    echo "Unknown distribution: $DIST"
    exit 1
fi


# Hardy fixes
#if test $DIST = hardy; then
    # Add backports; this isn't enough to fix building for hardy
#    OTHERMIRROR="$OTHERMIRROR | deb http://archive.ubuntu.com/ubuntu hardy-backports main restricted universe multiverse"
#fi


# Print diagnostics
echo "script = $(basename $0)"
for i in BASETGZ DISTRIBUTION APTCACHE MIRRORSITE COMPONENTS \
    DEBOOTSTRAPOPTS[@] OTHERMIRROR BINDMOUNTS; do
    eval echo "$i = \${$i}"
done
